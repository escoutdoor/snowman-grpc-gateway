version: "3.9"
services:
  snowman_service:
    container_name: snowman_service
    restart: unless-stopped
    env_file: ".env"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - grafana
      - prometheus
      - otel-collector
    volumes:
      - ./certificate:/app/certificate
      - ./swagger:/app/swagger
      - ./:/app
    ports:
      - 9010:9010 # grpc
      - 9015:9015 # http
      - 9020:9020 # swagger
      - 4040:4040 # prometheus server

  loki:
    container_name: loki
    restart: on-failure
    image: grafana/loki:3.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 3100:3100
    volumes:
      - ./configs/loki.yaml:/etc/loki/local-config.yaml

  grafana:
    container_name: grafana
    restart: on-failure
    image: grafana/grafana:11.6.1
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki

  alloy:
    container_name: alloy
    restart: on-failure
    image: grafana/alloy:v1.8.2
    volumes:
      - ./configs/config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - loki
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
    ports:
      - 12345:12345

  prometheus:
    container_name: prometheus
    restart: on-failure
    image: prom/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  jaeger:
    container_name: jaeger
    restart: on-failure
    image: jaegertracing/all-in-one:1.48
    ports:
      - 16686:16686 # ui

  otel-collector:
    container_name: otel-collector
    restart: on-failure
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      - jaeger
    volumes:
      - ./configs/otel.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver

volumes:
  grafana_data:
  prometheus_data:
